/*
 * Wild Apricot API for non-administrative access
 *
 * Wild Apricot API for non-administrative access
 *
 * OpenAPI spec version: 8.10.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace WildApricot.Models
{
    /// <summary>
    /// Field data type.
    /// </summary>
    /// <value>Field data type.</value>
    [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
    public enum CustomFieldType
    {
        /// <summary>
        /// Enum StringEnum for String
        /// </summary>
        [EnumMember(Value = "String")]
        StringEnum = 0,

        /// <summary>
        /// Enum DateTimeEnum for DateTime
        /// </summary>
        [EnumMember(Value = "DateTime")]
        DateTimeEnum = 1,

        /// <summary>
        /// Enum BooleanEnum for Boolean
        /// </summary>
        [EnumMember(Value = "Boolean")]
        BooleanEnum = 2,

        /// <summary>
        /// Enum ChoiceEnum for Choice
        /// </summary>
        [EnumMember(Value = "Choice")]
        ChoiceEnum = 3,

        /// <summary>
        /// Enum MultipleChoiceEnum for MultipleChoice
        /// </summary>
        [EnumMember(Value = "MultipleChoice")]
        MultipleChoiceEnum = 4,

        /// <summary>
        /// Enum PictureEnum for Picture
        /// </summary>
        [EnumMember(Value = "Picture")]
        PictureEnum = 5,

        /// <summary>
        /// Enum NumberEnum for Number
        /// </summary>
        [EnumMember(Value = "Number")]
        NumberEnum = 6,

        /// <summary>
        /// Enum CalculatedExtraChargeEnum for CalculatedExtraCharge
        /// </summary>
        [EnumMember(Value = "CalculatedExtraCharge")]
        CalculatedExtraChargeEnum = 7,

        /// <summary>
        /// Enum SectionDividerEnum for SectionDivider
        /// </summary>
        [EnumMember(Value = "SectionDivider")]
        SectionDividerEnum = 8,
    }
}
