/*
 * Wild Apricot API for non-administrative access
 *
 * Wild Apricot API for non-administrative access
 *
 * OpenAPI spec version: 8.10.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using WildApricot.Attributes;
using WildApricot.Models;
using WildApricot.Security;

namespace WildApricot.Controllers
{
    /// <summary>
    ///
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    {
        /// <summary>
        /// Base URL for this API.
        /// </summary>
        /// <remarks>Base URL for this API. It provides a list of resources, which can be directly accessed by URL without providing any additional information like account ID etc. </remarks>
        /// <response code="200">Array of resources</response>
        /// <response code="401">oAuth token was not provided, invalid or does not provide access to requested URL.</response>
        [HttpGet]
        [Route("/publicview/v1/")]
        [ValidateModelState]
        [SwaggerOperation("RootGet")]
        [SwaggerResponse(
            statusCode: 200,
            type: typeof(List<Resource>),
            description: "Array of resources"
        )]
        public virtual IActionResult RootGet()
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Resource>));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson =
                "[ {\n  \"Description\" : \"Description\",\n  \"AllowedOperations\" : \"AllowedOperations\",\n  \"Url\" : \"Url\",\n  \"Name\" : \"Name\"\n}, {\n  \"Description\" : \"Description\",\n  \"AllowedOperations\" : \"AllowedOperations\",\n  \"Url\" : \"Url\",\n  \"Name\" : \"Name\"\n} ]";

            var example =
                exampleJson != null
                    ? JsonConvert.DeserializeObject<List<Resource>>(exampleJson)
                    : default(List<Resource>); //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
