/*
 * Wild Apricot API for non-administrative access
 *
 * Wild Apricot API for non-administrative access
 *
 * OpenAPI spec version: 8.10.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using WildApricot.Attributes;
using WildApricot.Models;
using WildApricot.Security;

namespace WildApricot.Controllers
{
    /// <summary>
    ///
    /// </summary>
    [ApiController]
    public class PaymentsApiController : ControllerBase
    {
        /// <summary>
        /// Retrieve list of payments for the current contact.
        /// </summary>
        /// <remarks>Retrieve list of payments made by the current contact.</remarks>
        /// <param name="accountId">Your account identifier</param>
        /// <param name="skip">This parameter specifies the number of records to be skipped. For example, if the result set contains 100 records and $skip&#x3D;50, then the call will return records 51 to 100. Usually used together with **$top** parameter. </param>
        /// <param name="top">Specifies the maximum number of records to be returned. For example, if the result set contains 100 records and $top&#x3D;50, then the call will return records from 1 to 50.  Usually this parameter used together with $skip parameter. </param>
        /// <param name="count">Append this parameter to a search request to retrieve the number of payments returned by the search. </param>
        /// <param name="idsOnly">If specified, the call returns a list of payment IDs for the filtered payments. In this case, the response will contain only the PaymentIdentifiers field. </param>
        /// <response code="200">Returns list of payments</response>
        /// <response code="401">oAuth token was not provided, invalid or does not provide access to requested URL.</response>
        /// <response code="428">Current user should accept terms of use before using API. It can be done in web interface, or by making a POST request to /rpc/{accountId}/acceptTermsOfUse</response>
        /// <response code="429">On too many requests from same account. Wait for a minute and try again.</response>
        [HttpGet]
        [Route("/publicview/v1/accounts/{accountId}/payments")]
        [ValidateModelState]
        [SwaggerOperation("AccountsAccountIdPaymentsGet")]
        [SwaggerResponse(
            statusCode: 200,
            type: typeof(List<Payment>),
            description: "Returns list of payments"
        )]
        public virtual IActionResult AccountsAccountIdPaymentsGet(
            [FromRoute] [Required] decimal? accountId,
            [FromQuery] int? skip,
            [FromQuery] int? top,
            [FromQuery] bool? count,
            [FromQuery] bool? idsOnly
        )
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Payment>));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 428 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(428);

            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson =
                "[ {\n  \"Comment\" : \"Comment\",\n  \"RefundedAmount\" : 5.962133916683182,\n  \"Value\" : 6.027456183070403,\n  \"AllocatedValue\" : 1.4658129805029452,\n  \"PaymentType\" : \"Unknown\",\n  \"Id\" : 0,\n  \"DocumentNumber\" : \"DocumentNumber\",\n  \"DocumentDate\" : \"2000-01-23\",\n  \"Url\" : \"Url\"\n}, {\n  \"Comment\" : \"Comment\",\n  \"RefundedAmount\" : 5.962133916683182,\n  \"Value\" : 6.027456183070403,\n  \"AllocatedValue\" : 1.4658129805029452,\n  \"PaymentType\" : \"Unknown\",\n  \"Id\" : 0,\n  \"DocumentNumber\" : \"DocumentNumber\",\n  \"DocumentDate\" : \"2000-01-23\",\n  \"Url\" : \"Url\"\n} ]";

            var example =
                exampleJson != null
                    ? JsonConvert.DeserializeObject<List<Payment>>(exampleJson)
                    : default(List<Payment>); //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Check status of credit card payment
        /// </summary>
        /// <remarks>Check the status of the credit card payment</remarks>
        /// <param name="body">Tracking ID of payment transaction, returned from rpc/{accountId}/startPayment</param>
        /// <param name="accountId">Your account identifier</param>
        /// <response code="200">Returns current payment status</response>
        /// <response code="400">On invalid parameters. See error details in response body.</response>
        /// <response code="401">oAuth token was not provided, invalid or does not provide access to requested URL.</response>
        /// <response code="428">Current user should accept terms of use before using API. It can be done in web interface, or by making a POST request to /rpc/{accountId}/acceptTermsOfUse</response>
        /// <response code="429">On too many requests from same account. Wait for a minute and try again.</response>
        [HttpPost]
        [Route("/publicview/v1/rpc/{accountId}/checkPaymentStatus")]
        [ValidateModelState]
        [SwaggerOperation("RpcAccountIdCheckPaymentStatusPost")]
        [SwaggerResponse(
            statusCode: 200,
            type: typeof(PaymentStatus),
            description: "Returns current payment status"
        )]
        [SwaggerResponse(
            statusCode: 400,
            type: typeof(Error),
            description: "On invalid parameters. See error details in response body."
        )]
        public virtual IActionResult RpcAccountIdCheckPaymentStatusPost(
            [FromBody] string body,
            [FromRoute] [Required] decimal? accountId
        )
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PaymentStatus));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 428 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(428);

            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson = "\"OK\"";

            var example =
                exampleJson != null
                    ? JsonConvert.DeserializeObject<PaymentStatus>(exampleJson)
                    : default(PaymentStatus); //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Retrieve allowed online payment methods
        /// </summary>
        /// <remarks>Retrieve allowed online payment methods</remarks>
        /// <param name="accountId">Your account identifier</param>
        /// <response code="200">List of available payment methods and method descriptions</response>
        /// <response code="400">On invalid parameters. See error details in response body.</response>
        /// <response code="401">oAuth token was not provided, invalid or does not provide access to requested URL.</response>
        /// <response code="428">Current user should accept terms of use before using API. It can be done in web interface, or by making a POST request to /rpc/{accountId}/acceptTermsOfUse</response>
        /// <response code="429">On too many requests from same account. Wait for a minute and try again.</response>
        [HttpPost]
        [Route("/publicview/v1/rpc/{accountId}/getAllowedPaymentMethodTypes")]
        [ValidateModelState]
        [SwaggerOperation("RpcAccountIdGetAllowedPaymentMethodTypesPost")]
        [SwaggerResponse(
            statusCode: 200,
            type: typeof(List<PaymentMethodTypeDescription>),
            description: "List of available payment methods and method descriptions"
        )]
        [SwaggerResponse(
            statusCode: 400,
            type: typeof(Error),
            description: "On invalid parameters. See error details in response body."
        )]
        public virtual IActionResult RpcAccountIdGetAllowedPaymentMethodTypesPost(
            [FromRoute] [Required] decimal? accountId
        )
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<PaymentMethodTypeDescription>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 428 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(428);

            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson =
                "[ {\n  \"PaymentMethodType\" : \"PaymentMethodType\",\n  \"Description\" : \"Description\"\n}, {\n  \"PaymentMethodType\" : \"PaymentMethodType\",\n  \"Description\" : \"Description\"\n} ]";

            var example =
                exampleJson != null
                    ? JsonConvert.DeserializeObject<List<PaymentMethodTypeDescription>>(exampleJson)
                    : default(List<PaymentMethodTypeDescription>); //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Start payment procedure
        /// </summary>
        /// <remarks>Start payment procedure for specific invoice(s)</remarks>
        /// <param name="accountId">Your account identifier</param>
        /// <param name="body"></param>
        /// <response code="200">Redirect URL to payment processor page, where user can enter credit card info and proceed with payment</response>
        /// <response code="400">On invalid parameters. See error details in response body.</response>
        /// <response code="401">oAuth token was not provided, invalid or does not provide access to requested URL.</response>
        /// <response code="428">Current user should accept terms of use before using API. It can be done in web interface, or by making a POST request to /rpc/{accountId}/acceptTermsOfUse</response>
        /// <response code="429">On too many requests from same account. Wait for a minute and try again.</response>
        [HttpPost]
        [Route("/publicview/v1/rpc/{accountId}/startPayment")]
        [ValidateModelState]
        [SwaggerOperation("RpcAccountIdStartPaymentPost")]
        [SwaggerResponse(
            statusCode: 200,
            type: typeof(PaymentTrackingInfo),
            description: "Redirect URL to payment processor page, where user can enter credit card info and proceed with payment"
        )]
        [SwaggerResponse(
            statusCode: 400,
            type: typeof(Error),
            description: "On invalid parameters. See error details in response body."
        )]
        public virtual IActionResult RpcAccountIdStartPaymentPost(
            [FromRoute] [Required] decimal? accountId,
            [FromBody] StartPaymentParams body
        )
        {
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(PaymentTrackingInfo));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(Error));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 428 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(428);

            //TODO: Uncomment the next line to return response 429 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(429);
            string exampleJson = null;
            exampleJson =
                "{\n  \"PaymentPageUrl\" : \"PaymentPageUrl\",\n  \"TrackingIdentifier\" : \"TrackingIdentifier\"\n}";

            var example =
                exampleJson != null
                    ? JsonConvert.DeserializeObject<PaymentTrackingInfo>(exampleJson)
                    : default(PaymentTrackingInfo); //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
